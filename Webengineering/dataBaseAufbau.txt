Benutzer:

	UserID (Key), Username, Password, Name, Vorname, Email, UserDescription/Bio
	
	CREATE TABLE Users(
     UserID int NOT NULL AUTO_INCREMENT PRIMARY KEY,
     Username varchar(255) NOT NULL,
     Password varchar(255) NOT NULL,
     Salt varchar(255) NOT NULL,
     Iterations int NOT NULL,
     EMail varchar(255) NOT NULL,  
     Firstname varchar(255) NOT NULL,
     Lastname varchar(255) NOT NULL,
     Bio varchar(255),
     Image longblob
)
	
Gruppe:

	GroupID(Key), GroupName, GroupDescription
	
	CREATE TABLE Groups(
     GroupID int NOT NULL AUTO_INCREMENT PRIMARY KEY,
     GroupName varchar(255) NOT NULL,
     GroupDescription varchar(255) NOT NULL
)
	
Gruppe-User-Relation:

	ID, GroupID(foreignKey), UserID(foreignKey)
	
	CREATE TABLE UserToGroup(
     ID int NOT NULL,
     UserID int NOT NULL,
     GroupID int NOT NULL,
     FOREIGN KEY (UserID) REFERENCES Users(UserID),
     FOREIGN KEY (GroupID) REFERENCES Groups(GroupID)
)

Zahlung:

	Amount, PaymentID(Key), Typ, Datum, Datum-bis
	
	CREATE TABLE Payments(
     PaymentID int NOT NULL AUTO_INCREMENT PRIMARY KEY,
     Amount decimal(9, 2) NOT NULL,
     DateCreated datetime NOT NULL,
)

MonatsZahlung;

	CREATE TABLE MonthlyPayments(
     MonthlyPaymentID int NOT NULL AUTO_INCREMENT PRIMARY KEY,
     Amount decimal(9, 2) NOT NULL,
     DateCreated datetime NOT NULL,
     DateUntil datetime NOT NULL,
)
	
Zahlung-Benutzer-Relation:

	ID, PaymentID(foreignKey), UserID(foreignKey)
	
	CREATE TABLE UserToPayment(
     ID int NOT NULL,
     UserID int NOT NULL,
     PaymentID int NOT NULL,
     FOREIGN KEY (UserID) REFERENCES Users(UserID),
     FOREIGN KEY (PaymentID) REFERENCES Payments(PaymentID)
)	
	
Zahlung-Gruppe-Relation:

	ID, PaymentID(foreignKey), GroupID(foreignKey)
	
	CREATE TABLE PaymentToGroup(
     ID int NOT NULL AUTO_INCREMENT,
     PaymentID int,
     GroupID int,
     FOREIGN KEY (PaymentID) REFERENCES Payments(PaymentID),
     FOREIGN KEY (GroupID) REFERENCES Groups(GroupID)
)
	
Monatszahlung-Zahlung-Relation:

	ID, IDMonatszahlung, IDZahlung
	
	CREATE TABLE MonthlyPaymentToPayment(
     ID int NOT NULL,
     MonthlyPaymentID int NOT NULL,
     PaymentID int NOT NULL,
     FOREIGN KEY (MonthlyPaymentID) REFERENCES MonthlyPayments(MonthlyPaymentID),
     FOREIGN KEY (PaymentID) REFERENCES Payments(PaymentID)
)

MonatsZahlung-Gruppe Relation:

	CREATE TABLE MonthlyPaymentToGroup(
     ID int NOT NULL AUTO_INCREMENT,
     MonthlyPaymentID int,
     GroupID int,
     FOREIGN KEY (MonthlyPaymentID) REFERENCES MonthlyPayments(MonthlyPaymentID),
     FOREIGN KEY (GroupID) REFERENCES Groups(GroupID)
)

NonthlyPayment to User:

CREATE TABLE UserToMonthlyPayment(
     ID int NOT NULL,
     UserID int NOT NULL,
     MonthlyPaymentID int NOT NULL,
     FOREIGN KEY (UserID) REFERENCES Users(UserID),
     FOREIGN KEY (MonthlyPaymentID) REFERENCES MonthlyPayments(MonthlyPaymentID)
)	